{"version":3,"sources":["dynamic_components/assets/game-2.jpg","dynamic_components/assets/game-1.jpg","dynamic_components/assets/game-3.jpg","dynamic_components/assets/game-4.jpg","dynamic_components/assets/game-5.jpg","dynamic_components/Card.js","dynamic_components/TouchHandler.js","dynamic_components/Slider.js","App.js","index.js"],"names":["module","exports","styles","text_main","position","top","left","transform","zIndex","height","width","fontSize","textTransform","letterSpacing","textAlign","text_sub","WebkitFontDmoothing","MozOsxFontSmoothing","textRendering","card","cursor","boxSizing","backgroundSize","backgroundPosition","userSelect","image","objectFit","userDrag","caption","React","memo","props","style","resize_width","draggable","alt","src","card_number","TouchHandler","xDown","yDown","config","choice","hasOwnProperty","configuration","events","onTouchStart","e","touches","clientX","clientY","onTouchMove","xUp","yUp","xDiff","yDiff","Math","abs","right","IMG_DATA","i1","i2","i3","i4","i5","lastPos","Slider","goToRight","state","currentCardIndex","cardContainer","children","length","new_currentCardIndex","imgWidth_Pixels","getBoundingClientRect","setState","activeIndex","transitionDuration","goToLeft","index","goToRightInfinite","setTimeout","goToLeftInfinite","mouseSwipe","persist","type","toLowerCase","goRightFn","goLeftFn","currentCard_Width","checked","bind","Indicator","cardWidth_Percent","window","innerWidth","media","minWidth","maximumCardSize","screen","availWidth","this","viewPort","firstCard_Clone","cloneNode","lastCard_Clone","insertBefore","append","addEventListener","i","target","curIndex","nextIndicator","className","htmlFor","id","onChange","setChecked","direction","onClick","ref","reference","onDragStart","onDragEnd","city_name","current","images","changeSlide","Component","map","element","toggle","key","overflow","display","flexDirection","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8a4ac34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game-2.976135d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-1.2c69353f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-3.357b2015.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-4.976b6c91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-5.ea38cc84.jpg\";","import React from \"react\";\r\nimport \"./slider.scss\";\r\n\r\n// var data = [\r\n//   { id: 1, itemNumber: \"Item 1\", text: \"Uno\" },\r\n//   { id: 2, itemNumber: \"Item 2\", text: \"Dos\" },\r\n//   { id: 3, itemNumber: \"Item 3\", text: \"Tres\" },\r\n//   { id: 4, itemNumber: \"Item 4\", text: \"Cuatro\" },\r\n//   { id: 5, itemNumber: \"Item 5\", text: \"Cinco\" },\r\n// ];\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.card,\r\n        width: `${props.resize_width}vw`,\r\n      }}\r\n    >\r\n      <div style={styles.caption}>\r\n        <p style={styles.text_main}>Welcome:</p>\r\n        {/* <p style={styles.text_sub}>{props.city_name}</p> */}\r\n        {/* {data.map(function (data) {\r\n          return <h2 style={styles.text_sub}>{props.city_name}</h2>;\r\n        })} */}\r\n\r\n        <img\r\n          draggable=\"false\"\r\n          alt=\"images\"\r\n          style={styles.image}\r\n          src={props.card_number}\r\n        ></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  text_main: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(20%, 35%)\",\r\n    zIndex: \"99999\",\r\n    height: \"50%\",\r\n    width: \"50%\",\r\n    fontSize: \"4vw\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"2.5px\",\r\n    textAlign: \"justify\",\r\n  },\r\n\r\n  text_sub: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(66%, 70%)\",\r\n    zIndex: \"99999\",\r\n    height: \"50%\",\r\n    width: \"50%\",\r\n    fontSize: \"3vw\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"2.5px\",\r\n    WebkitFontDmoothing: \"antialiased\",\r\n    MozOsxFontSmoothing: \"grayscale\",\r\n    textRendering: \"optimizeLegibility\",\r\n  },\r\n\r\n  card: {\r\n    cursor: \"grab\",\r\n    height: \"auto\",\r\n    boxSizing: \"border-box\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    userSelect: \"none\",\r\n\r\n    // userDrag: \"none\",\r\n    // userSelect: \"none\",\r\n    // MozUserSelect: \"none\",\r\n    // WebkitUserSelect: \"none\",\r\n    // WebkitUserDrag: \"none\",\r\n    // msUserSelect: \"none\",\r\n  },\r\n\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    position: \"relative\",\r\n    transform: \"translate(50%, 50%)\",\r\n\r\n    objectFit: \"cover\",\r\n    userSelect: \"none\",\r\n    userDrag: \"none\",\r\n\r\n    // WebkitUserDrag: \"none\",\r\n  },\r\n\r\n  caption: {\r\n    transform: \"translate(-50%, -50%)\",\r\n    userSelect: \"none\",\r\n  },\r\n};\r\n\r\nexport default React.memo(Card);\r\n\r\n// 1) draggable=\"false\" , draggable=\"true\" - DONE\r\n// 2) Text Design\r\n// 3) bug fixes\r\n// 4) Webpack and clean React app\r\n// 5) labels on buttons\r\n// 6) BEM Nesting\r\n\r\n// Even the slightest 1mm drag changes the active image. Consider preventing such behaviour.\r\n\r\n// Buttons and other elements are not accessible, they don’t have any labels for people who don’t see well.\r\n\r\n// Consider splitting your logic, making it more granular.\r\n\r\n// You use BEM, use its benefits in SCSS, not nesting tags themselves.\r\n\r\n// Redundant arrow functions in handlers (e) => do(e)\r\n","let TouchHandler = {\r\n  xDown: null,\r\n  yDown: null,\r\n};\r\n\r\nTouchHandler.configuration = {};\r\n\r\nTouchHandler.config = (config) => {\r\n  const x = [\"right\", \"left\"];\r\n  for (let choice of x) {\r\n    if (config.hasOwnProperty(choice)) {\r\n      TouchHandler.configuration[choice] = config[choice];\r\n    }\r\n  }\r\n};\r\n\r\nTouchHandler.events = {\r\n  onTouchStart: (e) => {\r\n    TouchHandler.xDown = e.touches[0].clientX;\r\n    TouchHandler.yDown = e.touches[0].clientY;\r\n  },\r\n  onTouchMove: (e) => {\r\n    if (TouchHandler.xDown === null || TouchHandler.yDown === null) {\r\n      return;\r\n    }\r\n\r\n    let xUp = e.touches[0].clientX;\r\n    let yUp = e.touches[0].clientY;\r\n\r\n    let xDiff = TouchHandler.xDown - xUp;\r\n    let yDiff = TouchHandler.yDown - yUp;\r\n\r\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n      if (xDiff > 0) {\r\n        if (TouchHandler.configuration.hasOwnProperty(\"left\")) {\r\n          TouchHandler.configuration.left();\r\n        }\r\n      } else {\r\n        if (TouchHandler.configuration.hasOwnProperty(\"right\")) {\r\n          TouchHandler.configuration.right();\r\n        }\r\n      }\r\n    }\r\n    TouchHandler.xDown = null;\r\n    TouchHandler.yDown = null;\r\n  },\r\n};\r\n\r\nexport default TouchHandler;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./slider.scss\";\r\nimport i1 from \"./assets/game-2.jpg\";\r\nimport i2 from \"./assets/game-1.jpg\";\r\nimport i3 from \"./assets/game-3.jpg\";\r\nimport i4 from \"./assets/game-4.jpg\";\r\nimport i5 from \"./assets/game-5.jpg\";\r\n\r\nimport TouchHandler from \"./TouchHandler\";\r\n\r\nconst IMG_DATA = [i1, i2, i3, i4, i5];\r\nlet lastPos = 0;\r\n\r\nclass Slider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentCardIndex: 1,\r\n      currentCard_Width: 0,\r\n      activeIndex: true,\r\n      checked: true,\r\n    };\r\n\r\n    this.goToRight = this.goToRight.bind(this);\r\n    this.goToLeft = this.goToLeft.bind(this);\r\n\r\n    this.goToRightInfinite = this.goToRightInfinite.bind(this);\r\n    this.goToLeftInfinite = this.goToLeftInfinite.bind(this);\r\n\r\n    this.goRightFn = this.goRightFn.bind(this);\r\n    this.goLeftFn = this.goLeftFn.bind(this);\r\n\r\n    this.Indicator = this.Indicator.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const cardWidth_Percent =\r\n      window.innerWidth < styles.media.minWidth\r\n        ? 100\r\n        : (styles.media.maximumCardSize / window.screen.availWidth) * 100;\r\n\r\n    this.setState({ currentCard_Width: cardWidth_Percent });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.viewPort.style.width = `${this.state.currentCard_Width}vw`;\r\n    const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n      .width;\r\n\r\n    let firstCard_Clone = this.cardContainer.children[0].cloneNode(true);\r\n    let lastCard_Clone = this.cardContainer.children[\r\n      this.cardContainer.children.length - 1\r\n    ].cloneNode(true);\r\n\r\n    this.cardContainer.insertBefore(\r\n      lastCard_Clone,\r\n      this.cardContainer.children[0]\r\n    );\r\n    this.cardContainer.append(firstCard_Clone);\r\n\r\n    this.cardContainer.style.transitionDuration = \"0.0s\";\r\n    this.cardContainer.style.transform = `translate(-${\r\n      this.state.currentCardIndex * imgWidth_Pixels\r\n    }px)`;\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      const cardWidth_Percent =\r\n        window.innerWidth < styles.media.minWidth\r\n          ? 100\r\n          : (styles.media.maximumCardSize / window.screen.availWidth) * 100;\r\n\r\n      for (let i = 0; i < this.cardContainer.children.length; i++) {\r\n        this.cardContainer.children[i].style.width = `${cardWidth_Percent}vw`;\r\n      }\r\n\r\n      this.viewPort.style.width = `${cardWidth_Percent}vw`;\r\n\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n      this.cardContainer.style.transitionDuration = \"0.0s\";\r\n      this.cardContainer.style.transform = `translate(-${\r\n        this.state.currentCardIndex * imgWidth_Pixels\r\n      }px)`;\r\n    });\r\n  }\r\n\r\n  goToRight = () => {\r\n    if (this.state.currentCardIndex < this.cardContainer.children.length - 2) {\r\n      let new_currentCardIndex = this.state.currentCardIndex + 1;\r\n\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState(\r\n        { currentCardIndex: new_currentCardIndex, activeIndex: false },\r\n        () => {\r\n          this.cardContainer.style.transitionDuration = \"0.5s\";\r\n          this.cardContainer.style.transform = `translate(-${\r\n            imgWidth_Pixels * this.state.currentCardIndex\r\n          }px)`;\r\n        }\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  goToLeft = () => {\r\n    const { currentCardIndex } = this.state;\r\n    if (currentCardIndex > 1) {\r\n      let index = currentCardIndex - 1;\r\n\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState({ currentCardIndex: index, activeIndex: true }, () => {\r\n        this.cardContainer.style.transitionDuration = \"0.5s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n      });\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  goToRightInfinite = () => {\r\n    if (this.state.currentCardIndex < this.cardContainer.children.length - 1) {\r\n      let new_currentCardIndex = this.state.currentCardIndex + 1;\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState({ currentCardIndex: new_currentCardIndex }, () => {\r\n        this.cardContainer.style.transitionDuration = \"0.5s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n\r\n        if (\r\n          this.state.currentCardIndex ===\r\n          this.cardContainer.children.length - 1\r\n        ) {\r\n          setTimeout(() => {\r\n            this.cardContainer.style.transitionDuration = \"0.0s\";\r\n            this.cardContainer.style.transform = `translate(-${imgWidth_Pixels}px)`;\r\n\r\n            this.setState({ currentCardIndex: 1 });\r\n          }, 502);\r\n        }\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  goToLeftInfinite = () => {\r\n    if (this.state.currentCardIndex > 0) {\r\n      let new_currentCardIndex = this.state.currentCardIndex - 1;\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState({ currentCardIndex: new_currentCardIndex }, () => {\r\n        this.cardContainer.style.transitionDuration = \"0.5s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n\r\n        if (this.state.currentCardIndex === 0) {\r\n          setTimeout(() => {\r\n            this.cardContainer.style.transitionDuration = \"0.0s\";\r\n            this.cardContainer.style.transform = `translate(-${\r\n              imgWidth_Pixels * (this.cardContainer.children.length - 2)\r\n            }px)`;\r\n\r\n            this.setState({\r\n              currentCardIndex: this.cardContainer.children.length - 2,\r\n            });\r\n          }, 502);\r\n        }\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  setChecked(e) {\r\n    this.setState({ checked: e.target.checked });\r\n  }\r\n\r\n  goRightFn() {\r\n    if (this.state.checked) {\r\n      return this.goToRight();\r\n    }\r\n\r\n    return this.goToRightInfinite();\r\n  }\r\n\r\n  goLeftFn() {\r\n    if (this.state.checked) {\r\n      return this.goToLeft();\r\n    }\r\n\r\n    return this.goToLeftInfinite();\r\n  }\r\n\r\n  mouseSwipe = (e) => {\r\n    e.persist();\r\n    // e.preventDefault();\r\n    let type = e.type.toLowerCase();\r\n    if (type === \"dragstart\") {\r\n      lastPos = e.clientX;\r\n    } else {\r\n      if (lastPos === 0 || e.clientX === 0 || lastPos === e.clientX) {\r\n        return;\r\n      }\r\n\r\n      e.clientX > lastPos ? this.goRightFn() : this.goLeftFn();\r\n    }\r\n  };\r\n\r\n  Indicator(curIndex, index) {\r\n    let nextIndicator = curIndex < index;\r\n    const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n      .width;\r\n\r\n    this.setState(\r\n      {\r\n        currentCardIndex: index + 1,\r\n        activeIndex: nextIndicator,\r\n      },\r\n      () => {\r\n        this.cardContainer.style.transitionDuration = \"0.3s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n\r\n        if (this.state.activeIndex === this.cardContainer.children.length - 1) {\r\n          this.activeIndex.style.transitionDuration = \"0.0s\";\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    TouchHandler.config({\r\n      left: () => {\r\n        this.goLeftFn();\r\n      },\r\n      right: () => {\r\n        this.goRightFn();\r\n      },\r\n    });\r\n\r\n    return (\r\n      <div className=\"slide\">\r\n        <label className=\"switch__checkbox\" htmlFor=\"checkbox\">\r\n          <input\r\n            id=\"checkbox\"\r\n            className=\"checked\"\r\n            checked={this.state.checked}\r\n            type=\"checkbox\"\r\n            onChange={(e) => this.setChecked(e)}\r\n          />\r\n          <div className=\"switcher round\" />\r\n        </label>\r\n\r\n        <button\r\n          className=\"slide__button slide__button--left\"\r\n          direction=\"left\"\r\n          onClick={() => this.goLeftFn()}\r\n        >\r\n          <span />\r\n        </button>\r\n        <button\r\n          className=\"slide__button slide__button--right\"\r\n          direction=\"right\"\r\n          onClick={() => this.goRightFn()}\r\n        >\r\n          <span />\r\n        </button>\r\n        <div\r\n          ref={(reference) => (this.viewPort = reference)}\r\n          className=\"view-port\"\r\n          style={styles.viewPort}\r\n        >\r\n          <div\r\n            {...TouchHandler.events}\r\n            ref={(reference) => (this.cardContainer = reference)}\r\n            className=\"card-container\"\r\n            style={styles.cardContainer}\r\n            onDragStart={(e) => this.mouseSwipe(e)}\r\n            onDragEnd={(e) => this.mouseSwipe(e)}\r\n            draggable=\"true\"\r\n          >\r\n            <Card\r\n              card_number={i1}\r\n              city_name={\"Hamburg\"}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i2}\r\n              city_name={\"Hong-Kong\"}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i3}\r\n              city_name={\"Riga\"}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i4}\r\n              city_name={\"Paris\"}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i5}\r\n              city_name={\"San-Francisco\"}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slide__dots\">\r\n          <Indicator\r\n            current={this.state.currentCardIndex}\r\n            images={this.state.images}\r\n            changeSlide={this.Indicator}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Indicator extends Component {\r\n  render() {\r\n    let current = this.props.current;\r\n    let images = IMG_DATA.map((element, index) => {\r\n      let toggle = index + 1 === current ? \"active\" : \"\";\r\n      return (\r\n        <li key={index}>\r\n          <button\r\n            className={toggle}\r\n            onClick={() => this.props.changeSlide(current, index)}\r\n          ></button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul>{images}</ul>;\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  viewPort: {\r\n    overflow: \"hidden\",\r\n\r\n    height: \"100vh\",\r\n    width: \"100vh\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n\r\n  cardContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"fit-content\",\r\n  },\r\n  media: {\r\n    maximumCardSize: 1920,\r\n    minWidth: 768,\r\n  },\r\n};\r\n\r\nexport default Slider;\r\n","import React, { Component } from \"react\";\n//import SPA from \"./static_component/SPA\";\nimport Slider from \"./dynamic_components/Slider\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        {/* <SPA /> */}\n        <Slider />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}