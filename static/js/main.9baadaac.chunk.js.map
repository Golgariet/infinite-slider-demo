{"version":3,"sources":["dynamic_components/assets/game-2.jpg","dynamic_components/assets/game-1.jpg","dynamic_components/assets/game-3.jpg","dynamic_components/assets/game-4.jpg","dynamic_components/assets/game-5.jpg","serviceWorker.js","dynamic_components/Card.js","dynamic_components/TouchHandler.js","dynamic_components/Slider.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","styles","card","height","boxSizing","backgroundSize","backgroundPosition","userSelect","image","width","position","transform","objectFit","userDrag","caption","React","memo","props","style","resize_width","alt","src","card_number","TouchHandler","xDown","yDown","config","choice","hasOwnProperty","configuration","events","onTouchStart","e","touches","clientX","clientY","onTouchMove","xUp","yUp","xDiff","yDiff","Math","abs","left","right","IMG_DATA","i1","i2","i3","i4","i5","lastPos","Slider","goToRight","state","currentCardIndex","cardContainer","children","length","new_currentCardIndex","imgWidth_Pixels","getBoundingClientRect","setState","activeIndex","transitionDuration","goToLeft","index","goToRightInfinite","setTimeout","goToLeftInfinite","mouseSwipe","persist","type","toLowerCase","goRightFn","goLeftFn","currentCard_Width","checked","bind","Indicator","cardWidth_Percent","innerWidth","media","minWidth","maximumCardSize","screen","availWidth","this","viewPort","firstCard_Clone","cloneNode","lastCard_Clone","insertBefore","append","addEventListener","i","target","curIndex","nextIndicator","className","htmlFor","id","onChange","setChecked","direction","onClick","ref","ref_id","onDragStart","onDragEnd","current","images","changeSlide","Component","map","element","toggle","key","overflow","display","flexDirection","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9baadaac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game-2.01cce3d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-1.2c69353f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-3.1a689743.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-4.976b6c91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-5.2ae3dd45.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport \"./slider.scss\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        ...styles.card,\r\n        width: `${props.resize_width}vw`,\r\n      }}\r\n    >\r\n      <div style={styles.caption}>\r\n        <img alt=\"images\" style={styles.image} src={props.card_number}></img>\r\n      </div>\r\n\r\n      {/* <button className=\"btn\" onBoard={props.btn}>\r\n        <span className=\"btn__visible\">{props.text}</span>\r\n        <span className=\"btn__invisible\">{props.slogan}</span>\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    height: \"auto\",\r\n    boxSizing: \"border-box\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    userSelect: \"none\",\r\n  },\r\n\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    position: \"relative\",\r\n    //top: \"50%\",\r\n    //left: \"0%\",\r\n    transform: \"translate(50%, 50%)\",\r\n    //backgroundImage: \"linear-gradient(to right bottom, #4880EC, #019CAD)\",\r\n    //alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n    objectFit: \"cover\",\r\n    // backgroundSize: \"cover\",\r\n    // backgroundPosition: \"center\",\r\n    //maxWidth: \"100%\",\r\n    //maxHeight: \"100%\",\r\n    userSelect: \"none\",\r\n    userDrag: \"none\",\r\n  },\r\n\r\n  caption: {\r\n    //position: \"absolute\",\r\n    //width: \"100%\",\r\n    //height: \"auto\",\r\n    // zIndex: \"1000\",\r\n    //top: \"-50%\",\r\n    //left: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    userSelect: \"none\",\r\n  },\r\n};\r\n\r\nexport default React.memo(Card);\r\n","// //////////////////////////////////////////////////////////\r\n\r\nlet TouchHandler = {\r\n  xDown: null,\r\n  yDown: null,\r\n};\r\n\r\nTouchHandler.configuration = {};\r\n\r\nTouchHandler.config = (config) => {\r\n  const x = [\"right\", \"left\"];\r\n  for (let choice of x) {\r\n    if (config.hasOwnProperty(choice)) {\r\n      TouchHandler.configuration[choice] = config[choice];\r\n    }\r\n  }\r\n};\r\n\r\nTouchHandler.events = {\r\n  onTouchStart: (e) => {\r\n    TouchHandler.xDown = e.touches[0].clientX;\r\n    TouchHandler.yDown = e.touches[0].clientY;\r\n  },\r\n  onTouchMove: (e) => {\r\n    if (TouchHandler.xDown === null || TouchHandler.yDown === null) {\r\n      return;\r\n    }\r\n\r\n    let xUp = e.touches[0].clientX;\r\n    let yUp = e.touches[0].clientY;\r\n\r\n    let xDiff = TouchHandler.xDown - xUp;\r\n    let yDiff = TouchHandler.yDown - yUp;\r\n\r\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n      if (xDiff > 0) {\r\n        if (TouchHandler.configuration.hasOwnProperty(\"left\")) {\r\n          TouchHandler.configuration.left();\r\n        }\r\n      } else {\r\n        if (TouchHandler.configuration.hasOwnProperty(\"right\")) {\r\n          TouchHandler.configuration.right();\r\n        }\r\n      }\r\n    }\r\n    TouchHandler.xDown = null;\r\n    TouchHandler.yDown = null;\r\n  },\r\n};\r\n\r\nexport default TouchHandler;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./slider.scss\";\r\nimport i1 from \"./assets/game-2.jpg\";\r\nimport i2 from \"./assets/game-1.jpg\";\r\nimport i3 from \"./assets/game-3.jpg\";\r\nimport i4 from \"./assets/game-4.jpg\";\r\nimport i5 from \"./assets/game-5.jpg\";\r\nimport TouchHandler from \"./TouchHandler\";\r\n\r\nconst IMG_DATA = [i1, i2, i3, i4, i5];\r\nlet lastPos = 0;\r\n//let currentPos = 0;\r\n\r\nclass Slider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentCardIndex: 1,\r\n      currentCard_Width: 0,\r\n      activeIndex: true,\r\n      checked: true,\r\n    };\r\n\r\n    this.goToRight = this.goToRight.bind(this);\r\n    this.goToLeft = this.goToLeft.bind(this);\r\n\r\n    this.goToRightInfinite = this.goToRightInfinite.bind(this);\r\n    this.goToLeftInfinite = this.goToLeftInfinite.bind(this);\r\n\r\n    this.goRightFn = this.goRightFn.bind(this);\r\n    this.goLeftFn = this.goLeftFn.bind(this);\r\n\r\n    this.Indicator = this.Indicator.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const cardWidth_Percent =\r\n      window.innerWidth < styles.media.minWidth\r\n        ? 100\r\n        : (styles.media.maximumCardSize / window.screen.availWidth) * 100;\r\n\r\n    this.setState({ currentCard_Width: cardWidth_Percent });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.viewPort.style.width = `${this.state.currentCard_Width}vw`;\r\n    const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n      .width;\r\n\r\n    let firstCard_Clone = this.cardContainer.children[0].cloneNode(true);\r\n    let lastCard_Clone = this.cardContainer.children[\r\n      this.cardContainer.children.length - 1\r\n    ].cloneNode(true);\r\n\r\n    this.cardContainer.insertBefore(\r\n      lastCard_Clone,\r\n      this.cardContainer.children[0]\r\n    );\r\n    this.cardContainer.append(firstCard_Clone);\r\n\r\n    this.cardContainer.style.transitionDuration = \"0.0s\";\r\n    this.cardContainer.style.transform = `translate(-${\r\n      this.state.currentCardIndex * imgWidth_Pixels\r\n    }px)`;\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      const cardWidth_Percent =\r\n        window.innerWidth < styles.media.minWidth\r\n          ? 100\r\n          : (styles.media.maximumCardSize / window.screen.availWidth) * 100;\r\n\r\n      for (let i = 0; i < this.cardContainer.children.length; i++) {\r\n        this.cardContainer.children[i].style.width = `${cardWidth_Percent}vw`;\r\n      }\r\n\r\n      this.viewPort.style.width = `${cardWidth_Percent}vw`;\r\n\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n      this.cardContainer.style.transitionDuration = \"0.0s\";\r\n      this.cardContainer.style.transform = `translate(-${\r\n        this.state.currentCardIndex * imgWidth_Pixels\r\n      }px)`;\r\n    });\r\n  }\r\n\r\n  goToRight = () => {\r\n    if (this.state.currentCardIndex < this.cardContainer.children.length - 2) {\r\n      let new_currentCardIndex = this.state.currentCardIndex + 1;\r\n\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState(\r\n        { currentCardIndex: new_currentCardIndex, activeIndex: false },\r\n        () => {\r\n          this.cardContainer.style.transitionDuration = \"0.5s\";\r\n          this.cardContainer.style.transform = `translate(-${\r\n            imgWidth_Pixels * this.state.currentCardIndex\r\n          }px)`;\r\n        }\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  goToLeft = () => {\r\n    const { currentCardIndex } = this.state;\r\n    if (currentCardIndex > 1) {\r\n      let index = currentCardIndex - 1;\r\n\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState({ currentCardIndex: index, activeIndex: true }, () => {\r\n        this.cardContainer.style.transitionDuration = \"0.5s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n      });\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  goToRightInfinite = () => {\r\n    if (this.state.currentCardIndex < this.cardContainer.children.length - 1) {\r\n      let new_currentCardIndex = this.state.currentCardIndex + 1;\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState({ currentCardIndex: new_currentCardIndex }, () => {\r\n        this.cardContainer.style.transitionDuration = \"0.5s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n\r\n        if (\r\n          this.state.currentCardIndex ===\r\n          this.cardContainer.children.length - 1\r\n        ) {\r\n          setTimeout(() => {\r\n            this.cardContainer.style.transitionDuration = \"0.0s\";\r\n            this.cardContainer.style.transform = `translate(-${imgWidth_Pixels}px)`;\r\n\r\n            this.setState({ currentCardIndex: 1 });\r\n          }, 502);\r\n        }\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  goToLeftInfinite = () => {\r\n    if (this.state.currentCardIndex > 0) {\r\n      let new_currentCardIndex = this.state.currentCardIndex - 1;\r\n      const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n        .width;\r\n\r\n      this.setState({ currentCardIndex: new_currentCardIndex }, () => {\r\n        this.cardContainer.style.transitionDuration = \"0.5s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n\r\n        if (this.state.currentCardIndex === 0) {\r\n          setTimeout(() => {\r\n            this.cardContainer.style.transitionDuration = \"0.0s\";\r\n            this.cardContainer.style.transform = `translate(-${\r\n              imgWidth_Pixels * (this.cardContainer.children.length - 2)\r\n            }px)`;\r\n\r\n            this.setState({\r\n              currentCardIndex: this.cardContainer.children.length - 2,\r\n            });\r\n          }, 502);\r\n        }\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  setChecked(e) {\r\n    this.setState({ checked: e.target.checked });\r\n  }\r\n\r\n  goRightFn() {\r\n    if (this.state.checked) {\r\n      return this.goToRight();\r\n    }\r\n\r\n    return this.goToRightInfinite();\r\n  }\r\n\r\n  goLeftFn() {\r\n    if (this.state.checked) {\r\n      return this.goToLeft();\r\n    }\r\n\r\n    return this.goToLeftInfinite();\r\n  }\r\n\r\n  mouseSwipe = (e) => {\r\n    e.persist();\r\n    let type = e.type.toLowerCase();\r\n    if (type === \"dragstart\") {\r\n      lastPos = e.clientX;\r\n    } else {\r\n      if (lastPos === 0 || e.clientX === 0 || lastPos === e.clientX) {\r\n        return;\r\n      }\r\n\r\n      e.clientX > lastPos ? this.goRightFn() : this.goLeftFn();\r\n    }\r\n  };\r\n\r\n  // touchSwipe = (e) => {\r\n  //   e.persist();\r\n  //   let type = e.type.toLowerCase();\r\n\r\n  //   if (type === \"touchstart\") {\r\n  //     lastPos = e.touches[0].clientX;\r\n  //   }\r\n\r\n  //   if (type === \"touchmove\") {\r\n  //     currentPos = e.touches[0].clientX;\r\n  //   }\r\n\r\n  //   if (type === \"touchend\") {\r\n  //     if (lastPos === 0 || currentPos === 0 || lastPos === currentPos) {\r\n  //       return;\r\n  //     }\r\n  //     currentPos > lastPos ? this.goRightFn() : this.goLeftFn();\r\n  //   }\r\n  // };\r\n\r\n  Indicator(curIndex, index) {\r\n    let nextIndicator = curIndex < index;\r\n    const imgWidth_Pixels = this.cardContainer.children[0].getBoundingClientRect()\r\n      .width;\r\n\r\n    this.setState(\r\n      {\r\n        currentCardIndex: index + 1,\r\n        activeIndex: nextIndicator,\r\n      },\r\n      () => {\r\n        this.cardContainer.style.transitionDuration = \"0.3s\";\r\n        this.cardContainer.style.transform = `translate(-${\r\n          imgWidth_Pixels * this.state.currentCardIndex\r\n        }px)`;\r\n\r\n        if (this.state.activeIndex === this.cardContainer.children.length - 1) {\r\n          this.activeIndex.style.transitionDuration = \"0.0s\";\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    TouchHandler.config({\r\n      left: () => {\r\n        this.goLeftFn();\r\n      },\r\n      right: () => {\r\n        this.goRightFn();\r\n      },\r\n    });\r\n\r\n    return (\r\n      <div className=\"slide\">\r\n        <label className=\"switch__checkbox\" htmlFor=\"checkbox\">\r\n          <input\r\n            id=\"checkbox\"\r\n            className=\"checked\"\r\n            checked={this.state.checked}\r\n            type=\"checkbox\"\r\n            onChange={(e) => this.setChecked(e)}\r\n          />\r\n          <div className=\"switcher round\" />\r\n        </label>\r\n\r\n        <button\r\n          className=\"slide__button slide__button--left\"\r\n          direction=\"left\"\r\n          onClick={() => this.goLeftFn()}\r\n        >\r\n          <span />\r\n        </button>\r\n        <button\r\n          className=\"slide__button slide__button--right\"\r\n          direction=\"right\"\r\n          onClick={() => this.goRightFn()}\r\n        >\r\n          <span />\r\n        </button>\r\n        <div\r\n          ref={(ref_id) => (this.viewPort = ref_id)}\r\n          className=\"view-port\"\r\n          style={styles.viewPort}\r\n        >\r\n          <div\r\n            {...TouchHandler.events}\r\n            ref={(ref_id) => (this.cardContainer = ref_id)}\r\n            className=\"card-container\"\r\n            style={styles.cardContainer}\r\n            // onTouchStart={(e) => this.touchSwipe(e)}\r\n            // onTouchMove={(e) => this.touchSwipe(e)}\r\n            // onTouchEnd={(e) => this.touchSwipe(e)}\r\n            onDragStart={(e) => this.mouseSwipe(e)}\r\n            onDragEnd={(e) => this.mouseSwipe(e)}\r\n          >\r\n            <Card\r\n              card_number={i1}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i2}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i3}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i4}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n            <Card\r\n              card_number={i5}\r\n              resize_width={this.state.currentCard_Width}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slide__dots\">\r\n          <Indicator\r\n            current={this.state.currentCardIndex}\r\n            images={this.state.images}\r\n            changeSlide={this.Indicator}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Indicator extends Component {\r\n  render() {\r\n    let current = this.props.current;\r\n    let images = IMG_DATA.map((element, index) => {\r\n      let toggle = index + 1 === current ? \"active\" : \"\";\r\n      return (\r\n        <li key={index}>\r\n          <button\r\n            className={toggle}\r\n            onClick={() => this.props.changeSlide(current, index)}\r\n          ></button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul>{images}</ul>;\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  viewPort: {\r\n    //position: \"absolute\", //important!\r\n    //top: \"50%\",\r\n    //left: \"50%\",\r\n    //transport: \"translate(-50%, -50%)\",\r\n    //height: \"auto\",\r\n    //backgroundColor: \"red\",\r\n    overflow: \"hidden\",\r\n    //margin: \"-150px\",\r\n    // objectFit: \"cover\",\r\n    // backgroundSize: \"cover\",\r\n    //minHeight: \"100vh\",\r\n    height: \"100vh\", // problem with ghosting\r\n    width: \"100vh\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n\r\n  cardContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"fit-content\",\r\n  },\r\n  media: {\r\n    maximumCardSize: 1920,\r\n    minWidth: 768,\r\n  },\r\n};\r\n\r\nexport default Slider;\r\n","import React, { Component } from \"react\";\n//import SPA from \"./static_component/SPA\";\nimport Slider from \"./dynamic_components/Slider\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        {/* <SPA /> */}\n        <Slider />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}